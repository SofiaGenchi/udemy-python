Colecciones de datos

--. Mas sobre Listas
datos = ["alex", 25, "arg"]

datos
["alex", 25, "arg"]

datos.append("roel")
datos
["alex", 25, "arg", "roel"] --- lo agrega al final de la lista 

datos.insert(0, "sofia") primero elijo la posicion y despues lo que voy a agregar

datos
["sofia", "alex", 25, "arg", "roel"]

datos.remove("sofia") --remueve aquel elemento tal cual lo defini

datos.pop() elimina el ultimo elemento de la lista

datos.clear() elimina todos los elementos de la lista
--. Pila con Listas
--. Cola en python
Para implementar una cola, utiliza collections.deque el cual fue diseñado para añadir y quitar de ambas puntas de forma rapida.
Hay que importar un paquete de datos:

from collections import deque

cola = deque(['Alex', 'Sofia', 'Pedro'])
cola
deque(['Alex', 'Sofia', 'Pedro'])

cola.append('Carlos')
cola
deque(['Alex', 'Sofia', 'Pedro', 'Carlos'])

cola.popleft() --- elimina el primero de la fila
'Alex'

cola
deque(['Roel', 'Sofia', 'Pedro', 'Carlos'])



--. Tupla
Una tupla consiste de un numero de valores separados por comas.
Son inmutables a diferencia de las listas.
Almacenar datos que queremos que no se modifiquen.
Se puede acceder a un elemento, contar la cantidad de elementos.

tupla = ('Alex', 25, 1.67)

--. Diccionario
Coleccion de datos.
Pensar en un diccionario como un conjunto de pares clave:valor con el requerimiento de que las claves sean unicas (dentro de un diccionario)

numeros = {}

numeros = {'uno': 1, 'dos': 2, 'tres': 3}   clave 'uno', valor 1

ingresar con la clave
numeros['uno']
1

agregar elementos:
numeros['cuatro'] = 4

numeros
{'uno': 1, 'dos': 2, 'tres': 3, 'cuatro': 4}



imprimir las claves:
numeros.keys()
dict_keys(['uno', 'dos', 'tres', 'cuatro'])


los valores:
numeros.values()
dict_values([1, 2, 3, 4])

claves y valores:
dict_items([('uno', 1), ('dos', 2) etcetc])

eliminar un elemento
numeros.pop('cuatro', 'No se encontro')

para eliminar todos los elementos del dicc.
numeros.clear()


--. Conjuntos
No puede almacenar un valor que se repita
a = set()
type(a)
<class 'set'>

a = {'a', 'b', 'c'}

agregar un elemento
a.add('d')

eliminar un elemento
a.discard('a')


elemento para eliminar todos los elementos del conjunto
a.clear()

--. Instruccion DEL
Hay una manera de quitar un item de una lista dado su indice en lugar de su valor: la instruccion del.
Esta es diferente del metodo pop(), el cual retorna un valor. La instruccion del tambien puede usarse para quitar secciones de una lista o vaciar la lista completa.

a = [-1, 1, 66.25, 333, 333, 1234.5]
del a[0]

a   (si ahora imprimo a nos dara como resultado la siguiente lista:)
[1, 66.25, 333, 333, 1234.5]

del a[2:4]
a
[1, 66.5, 1234.5]

del puede usarse tambien para eliminar variables:
del a
a
... name 'a' is not defined



--. Practica de seccion
Descuento de un restaurante 01
Descuento de un restaurante 02
Guardar resultados de pares e impares 03